2 / (6 / 19.6) ^ 2
2 / (1 / 19.6) ^ 2
2 * (5 * 1.28) ^ 2
2 / (1/6.4) ^ 2
0.2 * sqrt(41) + 1.28
1.28 - (1/5)*sqrt(16423 / 2)
1.28 - (1/5)*sqrt(81 / 2)
2 * (5 * 3.89) ^ 2
2 * (5 * 3.86) ^ 2
type1 <- c(3.03, 5.53, 5.6, 9.3, 9.92, 12.51, 12.95, 15.21, 16.04, 16.84)
type2 <- c(3.19, 4.26, 4.47, 4.53, 4.67, 4.69, 12.78, 6.79, 9.37, 12.75)
type1 <- c(3.03, 5.53, 5.6, 9.3, 9.92, 12.51, 12.95, 15.21, 16.04, 16.84)
type2 <- c(3.19, 4.26, 4.47, 4.53, 4.67, 4.69, 12.78, 6.79, 9.37, 12.75)
length(type1)
length(type2)
type2_mean <- mean(type1)
type1_mean <- mean(type1)
type2_mean <- mean(type2)
type2_sd <- sd(type1)
type1_sd <- sd(type1)
type2_sd <- sd(type2)
type1_mean - type2_mean
sp2 <- 0.5 * type1_sd + 0.5*type2_sd
(type1_mean - type2_mean) * 1.96 + sqrt(sp2) * sqrt(1/5)
(type1_mean + type2_mean) * 1.96 + sqrt(sp2) * sqrt(1/5)
t.test(type1, type2)
(type1_mean - type2_mean) - 1.96 * sqrt(sp2) * sqrt(1/5)
(type1_mean - type2_mean) + 1.96 * sqrt(sp2) * sqrt(1/5)
type1 <- c(3.03, 5.53, 5.6, 9.3, 9.92, 12.51, 12.95, 15.21, 16.04, 16.84)
type2 <- c(3.19, 4.26, 4.47, 4.53, 4.67, 4.69, 12.78, 6.79, 9.37, 12.75)
type1-type2
type1_mean - type2_mean
(type1_mean - type2_mean) - 1.96 * sqrt(sp2) * sqrt(1/5)
(type1_mean - type2_mean) + 1.96 * sqrt(sp2) * sqrt(1/5)
t.test(type1, type2)
(type1_mean - type2_mean) - 2.1 * sqrt(sp2) * sqrt(1/5)
(type1_mean - type2_mean) + 2.1 * sqrt(sp2) * sqrt(1/5)
type1_mean
type2_mean
type1_var <- var(type1)
type2_var <- var(type2)
type1_var <- var(type1)
type2_var <- var(type2)
sp2 <- 0.5 * type1_sd + 0.5*type2_sd
(type1_mean - type2_mean) - 2.1 * sqrt(sp2) * sqrt(1/5)
type1_mean <- mean(type1)
type2_mean <- mean(type2)
type1_var <- var(type1)
type2_var <- var(type2)
sp2 <- 0.5 * type1_var + 0.5*type2_var
(type1_mean - type2_mean) - 2.1 * sqrt(sp2) * sqrt(1/5)
(type1_mean - type2_mean) + 2.1 * sqrt(sp2) * sqrt(1/5)
t.test(type1, type2)
(type1_mean - type2_mean) - 2.0723 * sqrt(sp2) * sqrt(1/5)
(type1_mean - type2_mean) + 2.0723 * sqrt(sp2) * sqrt(1/5)
t.test(type1, type2)
(type1_mean - type2_mean) - 2.1 * sqrt(sp2) * sqrt(1/5)
(type1_mean - type2_mean) + 2.0723 * sqrt(sp2) * sqrt(1/5)
outer(type1, type2, ">")
sum(outer(type1, type2, ">"))
?outer
outer(type1, type2, "<")
sum(outer(type1, type2, "<"))
tmp <- vector(length = 1000)
tmp <- vector(length = 1000)
for (i in 1:1000) {
s1 <- sample(type1, length(type1), replace = T)
s2 <- sample(type2, length(type2), replace = T)
tmp[i] <- outer(s1, s2, ">") / (length(type1) * length(type2))
}
tmp <- vector(length = 1000)
for (i in 1:1000) {
s1 <- sample(type1, length(type1), replace = T)
s2 <- sample(type2, length(type2), replace = T)
tmp[i] <- sum(outer(s1, s2, ">")) / (length(type1) * length(type2))
}
tmp
hist(tmp)
tmp <- vector(length = 100000)
for (i in 1:100000) {
s1 <- sample(type1, length(type1), replace = T)
s2 <- sample(type2, length(type2), replace = T)
tmp[i] <- sum(outer(s1, s2, ">")) / (length(type1) * length(type2))
}
hist(tmp)
present <- c(22.8, 10.2, 20.8, 27, 19.2, 9, 14.2, 19.8, 14.5, 14.8)
absent <- c(23.5, 31, 19.5, 26.2, 26.5, 25.2, 24.5, 23.8, 27.8, 22)
median(present)
median(absent)
presence <- median(present)
absence <- median(absent)
presence -absence
B <- vector(length = 1000)
B <- vector(length = 1000)
for (i in 1:1000) {
s1 <- sample(present, length(present), replace = T)
s2 <- sample(absent, length(present), replace = T)
B[i] <- median(s1) - median(s2)
}
hist(B)
presence -absence
B <- vector(length = 100000)
for (i in 1:100000) {
s1 <- sample(present, length(present), replace = T)
s2 <- sample(absent, length(present), replace = T)
B[i] <- median(s1) - median(s2)
}
hist(B)
sd(B)
presence -absence
mean(B)
-7.85 + qnorm(1 - 0.1/2) * sd(B)
sd(B)
-7.85 + qnorm(1 - 0.1/2) * sd(B)
-7.85 - qnorm(1 - 0.1/2) * sd(B)
-7.85 + qnorm(1 - 0.1/2) * sd(B)
1.65 * sqrt(2)
1.65 - (sqrt(2) / 2)
qnorm(1.65 - (sqrt(2) / 2))
qnorm(1- 0.1)
1.96 * sqrt(2)
-1.96 * sqrt(2)
2 * (1.96 - sqrt(2)/ 2)
1.96 - sqrt(2)/ 2
1.96 - (sqrt(2)/ 2)
sqrt(25/2)/5
1.97 - sqrt(25/2)/5
power.t.test
?power.t.test
power.t.test(n = 25, sd = 5, sig.level = 0.1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.1)
power.t.test(n = 25, sd = 5)
power.t.test(n = 25, delta = 1)
power.t.test(n = 25, sd = 5, delta = 1)
power.t.test(n = 25, sd = 5)
power.t.test(n = 25, sd = 5, delta = 1)
power.t.test(n = 50, sd = 5, delta = 1)
power.t.test(n = 25, sd = 5, delta = 1)
power.t.test(n = 25, sd = 5, delta = 1, alternative = "one.sided")
power.t.test(n = 25, sd = 5, delta = 1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.05, delta = 1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.1, delta = 1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.1, delta = 1, alternative = "one.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.9, delta = 1, alternative = "one.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.1, delta = 1, alternative = "one.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.05, delta = 1, alternative = "one.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.05, delta = 1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.05, delta = 1, alternative = "one.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.05, delta = 1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.1, delta = 1, alternative = "two.sided")
power.t.test(n = 25, sd = 5, sig.level = 0.1, delta = 1, alternative = "one.sided")
sqrt(25/2)
sqrt(25/2)/ 5
1.96 - sqrt(25/2)/ 5
-3.77 / sqrt(2)
1.77/ sqrt(2)
data1 <- c(14.27, 14.80, 12.28, 17.09, 15.10, 12.92, 15.56, 15.38, 15.15, 13.98, 14.90, 15.91, 14.52, 15.63, 13.83, 13.66, 13.98, 14.47, 14.65, 14.73, 15.18, 14.49, 14.56, 15.03, 15.40, 14.68, 13.33, 14.41, 14.19, 15.21, 14.75, 14.41, 14.04, 13.68, 15.31, 14.32, 13.64, 14.77, 14.30, 14.62, 14.10, 15.47, 13.73, 13.65, 15.02, 14.01, 14.92, 15.47, 13.75, 14.87, 15.28, 14.43, 13.96, 14.57, 15.49, 15.13,
14.23, 14.44, 14.57)
data1
plot.ecdf(data1)
quantile(data1, probs = c(0.90, 0.75, 0.50, 0.25, 0.10))
hist(data1)
qqnorm(data1)
qqline(data1, col = 2)
F <- rnorm(1000, mean = 0, sd = 1)
G <- rnorm(1000, mean = 1, sd = 1)
qqplot(F,G)
G <- rnorm(1000, mean = 1, sd = 4)
qqplot(F,G)
exp(375/(2 * 25^2))
numbersu <- c(1867, 1789, 1944, 2094, 2097, 1981, 1887, 2024, 1928, 2032, 1978, 1859)
days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
sum(ddays)
sum(days)
expected <- numbersu * (days / sum(days))
expected
expected <- sum(numbersu) * (days / sum(days))
expected
sum((numbersu - expected) ^ 2 / expected)
numberseason <- c(1668, 1407, 1370, 1309, 1341, 1338, 1406, 1446, 1332, 1363, 1410, 1526)
expectedseason <- sum(numberseason) / 12
expectedseason
sum((numberseason - 1409.667) ^ 2 / 1409.667)
(numberseason - 1409.667) ^ 2
(numberseason - 1409.667) ^ 2 / 1409.667
sum((numberseason - 1409.667) ^ 2 / 1409.667)
dbinom(280, 17, 0.14)
?dbinom
dbinom(17, 280, 0.14)
exp(-2.71/2)
exp(-9.24/2)
n <0 0:12
n <- 0:12
n
freq <- c(7, 45, 181, 478, 829, 1112, 1343, 1033, 670, 286, 104, 24, 3)
sum(n * freq)
sum(freq)
sum(n * freq)
sum(n * freq) / 12 * 6115
sum(n * freq) / (12 * 6115)
p <- sum(n * freq) / (12 * 6115)
dbinom(n, freq, p)
sum(freq) * dbinom(n, freq, p)
sum(freq) * dbinom(n, sum(freq), p)
p <- sum(n * freq) / (12 * 6115)
p
sum(freq) * dbinom(n, sum(freq), p)
sum(freq) * dbinom(sum(freq), n, p)
sum(freq) * dbinom(n, 12, p)
expected <- sum(freq) * dbinom(n, 12, p)
(freq -expected) ^ 2 / expected
sum((freq -expected) ^ 2 / expected)
exp(6.02)
dgeom(0:10, 05)
dgeom(0:10, 0.5)
dgeom(0:10, 0.7)
coin1 <- dgeom(0:10, 0.5)
conin2 <- dgeom(0:10, 0.7)
coin2 <- dgeom(0:10, 0.7)
coin1 / coin2
coin1[8:10]
sum(coin1[8:10])
sum(coin2[8:10])
sum(coin1[8:10])
freq <- c(14, 30, 36, 68, 43, 43, 30, 14, 10, 6, 4, 1, 1, 0)
sum(0:13 * freq)
total <- sum(0:13 * freq)
total
total / 300
lam <- total / 300
factorial(3)
300 * ((e ^(-lam) * lam ^ 0:13) / factorial(0:13))
300 * ((exp(-lam) * lam ^ 0:13) / factorial(0:13))
300 * ((exp(-lam) * lam ^ 0:13) / factorial(0:13))
(exp(-lam)
exp(-lam)
exp(-lam)
exp(-lam)
exp(-lam)
exp(-lam)
exp(-lam)
lam ^ 0:13
lalm
lam
lam ^ 1
lam ^ (0:13)
(exp(-lam) * lam ^ (0:13))
(exp(-lam) * lam ^ (0:13)) / factorial(0:13)
300 * ((exp(-lam) * lam ^ (0:13)) / factorial(0:13))
expected <- 300 * ((exp(-lam) * lam ^ (0:13)) / factorial(0:13))
(freq - expected) ^ 2 / expected
sum((freq - expected) ^ 2 / expected)
dbinom(0:12, 12, 0.5)
6115 * dbinom(0:12, 12, 0.5)
freq <- c(7, 45, 181, 478, 829, 1112, 1343, 1033, 670, 286, 104, 24, 3)
expected <- 6115 * dbinom(0:12, 12, 0.5)
sum((freq - expected) ^ 2 / expected)
sum(freq * 0:12)
sum(freq * 0:12) / 6115
expected <- 6115 * dbinom(0:12, 12, 0.48)
freq <- c(7, 45, 181, 478, 829, 1112, 1343, 1033, 670, 286, 104, 24, 3)
sum(freq * 0:12) / 6115
sum((freq - expected) ^ 2 / expected)
(freq - expected) ^ 2 / expected
freq <- c(7, 45, 181, 478, 829, 1112, 1343, 1033, 670, 286, 104, 24, 3)
expected <- 6115 * dbinom(0:12, 12, 0.48)
(freq - expected) ^ 2 / expected
expected <- 6115 * dbinom(0:12, 12, 0.48)
expected
(freq - expected) ^ 2 / expected
sum((freq - expected) ^ 2 / expected)
((1 - 18/38)/(18/38) - 1) / ((1 - (18 / 38)/ (18/ 38)) ^ 20 - 1)
((1 - 18/38)/(18/38) - 1) / (( (1 - (18 / 38))/ (18/ 38) ) ^ 20 - 1)
( ((1 - 18/38) / (18/38)) - 1) / (( (1 - (18 / 38))/ (18/ 38) ) ^ 20 - 1)
( ((1 - 18/38) / (18/38)) ^ 10 - 1) / (( (1 - (18 / 38))/ (18/ 38) ) ^ 20 - 1)
setwd("~/Dropbox/stat159/stat159-fall2016-hw02")
mydat <- fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
library(data.table)
mydat <- fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
mydat
?write.csv
getwd()
write.csv(file, "data/Advertising.csv")
data = read.csv("data/Advertising.csv")
summary(data)
data
?read.csv()
file = fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
write.csv(file, "data/Advertising.csv")
data = read.csv("data/Advertising.csv")
data
summary(data)
library(ggplot2)
summary(data)
library(dplyr)
summary(data)
select(data, TV, Sales)
data.TV_sales = select(data, TV, Sales)
data.TV_sales
data.TV_sales
ggplot(data, aes(x = TV, y = Sales)) + geom_point()
?data
ggplot(data, aes(x = TV)) + geom_histogram()
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 1)
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10)
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 30)
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10)
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 10)
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 5)
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2)
ggplot(data, aes(x = Sales)) + geom_density()
ggplot(data, aes(x = TV)) + geom_boxplot()
summary(data)
?"sink"
sink("hi")
summary(data)
sink()
sink("advertising_summary")
summary(data)
sink()
sink("data/eda-output.txt")
summary(data)
sink()
summary(select(data, TV, Sales))
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
?sink()
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
unsink("data/eda-output.txt")
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
unlink("data/eda-output.txt")
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10)
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + geom_tile("Histogram of TV")
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV")
data
data
data
data = read.csv("data/Advertising.csv")
data
write.csv(file, "data/Advertising.csv")
file = fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
# export in csv format
write.csv(file, "data/Advertising.csv")
# read from Advertising.csv
data = read.csv("data/Advertising.csv")
# summary statistics
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
unlink("data/eda-output.txt")
data
file = fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
# export in csv format
write.csv(file, "data/Advertising.csv")
# read from Advertising.csv
data = read.csv("data/Advertising.csv")
# summary statistics
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
data
data
summary(data)
ads = read.csv("data/Advertising.csv")
ads
library(data.table)
library(ggplot2)
library(dplyr)
# Download file from the website
file = fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
files
file
file
View(file)
View(file)
file
# export in csv format
write.csv(file, "data/Advertising.csv")
# read from Advertising.csv
ads = read.csv("data/Advertising.csv")
# summary statistics
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
library(data.table)
library(ggplot2)
library(dplyr)
# summary statistics
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
select()
select()
summary(select(data, TV, Sales))
select(data, TV, Sales)
select(data, TV, Sales)
data = read.csv("data/Advertising.csv")
# summary statistics
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
View(data)
# Histograms
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV")
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2)
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2) + ggtitle("Histogram of Sales")
file = fread('http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv')
# export in csv format
write.csv(file, "data/Advertising.csv", row.names = FALSE)
# read from Advertising.csv
data = read.csv("data/Advertising.csv")
# summary statistics
sink("data/eda-output.txt")
summary(select(data, TV, Sales))
sink()
View(data)
ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("hi")
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2) + ggtitle("Histogram of Sales") + xlba("Sales, in thousands of units")
ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2) + ggtitle("Histogram of Sales") + xlab("Sales, in thousands of units")
hist_tv =ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
pdf(hist_tv)
hist_tv =ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
dev.off()
pdf("images/histogram-tv.png")
hist_tv =ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
dev.off()
paste0("hi", "3")
paste0("hi", "3")
print(paste0("hi", "3")0
print(paste0("hi", "3"))
View(paste0("hi", "3"))
save_pdf = function(file, title) {
pdf(paste0("images/", title))
file
dev.off()
}
hist_tv =ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
save_pdf(dist_tv)
save_pdf(dist_tv, "histogram-tv.png")
hist_tv = ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
save_pdf(hist_tv, "histogram-tv.png")
hist_tv = ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
save_pdf(hist_tv, "histogram-tv.png")
save_png = function(file, title) {
png(paste0("images/", title))
file
dev.off()
}
hist_tv = ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
save_pdf(hist_tv, "histogram-tv.pdf")
save_png(hist_tv, "histogram-tv.png")
save_png = function(file, title) {
png(paste0("images/", title))
file
dev.off()
}
save_png(hist_tv, "histogram-tv.png")
save_pdf(hist_tv, "histogram-tv.pdf")
save_png(hist_tv, "histogram-tv.png")
save_png = function(file, title) {
png(paste0("images/", title))
print(file)
dev.off()
}
save_png(hist_tv, "histogram-tv.png")
# Histograms
save_pdf = function(file, title) {
pdf(paste0("images/", title))
print(file)
dev.off()
}
save_png = function(file, title) {
png(paste0("images/", title))
print(file)
dev.off()
}
hist_tv = ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets, in thousands of dollars")
save_pdf(hist_tv, "histogram-tv.pdf")
save_png(hist_tv, "histogram-tv.png")
hist_sales = ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2) + ggtitle("Histogram of Sales") + xlab("Sales, in thousands of units")
hist_sales = ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2) + ggtitle("Histogram of Sales") + xlab("Sales, in thousands of units")
save_pdf(hist_sales, "histogram-sales.pdf")
save_png(hist_sales, "histogram-sales.png")
ggplot(data, aes(x = Sales)) + geom_density()
ggplot(data, aes(x = TV)) + geom_boxplot()
scatter_tv_sales = ggplot(data, aes(x = TV, y = Sales)) + geom_point()
scatter_tv_sales
scatter_tv_sales = ggplot(data, aes(x = TV, y = Sales)) + geom_point()
save_pdf(scatter_tv_sales, "scatterplot-tv-sales.pdf")
save_png(scatter_tv_sales, "scatterplot-tv-sales.png")
scatter_tv_sales = ggplot(data, aes(x = TV, y = Sales)) + geom_point() + ggtitle("Scatterplot of TV vs Sales") + xlab("Budgets, in thousands of dollars") + ylab("Sales, in thousands of units")
save_pdf(scatter_tv_sales, "scatterplot-tv-sales.pdf")
save_png(scatter_tv_sales, "scatterplot-tv-sales.png")
hist_tv = ggplot(data, aes(x = TV)) + geom_histogram(binwidth = 10) + ggtitle("Histogram of TV") + xlab("Budgets on TV, in thousands of dollars")
save_pdf(hist_tv, "histogram-tv.pdf")
save_png(hist_tv, "histogram-tv.png")
## Histogram of Sales
hist_sales = ggplot(data, aes(x = Sales)) + geom_histogram(binwidth = 2) + ggtitle("Histogram of Sales") + xlab("Sales, in thousands of units")
save_pdf(hist_sales, "histogram-sales.pdf")
save_png(hist_sales, "histogram-sales.png")
## scatterplot-tv-sales
scatter_tv_sales = ggplot(data, aes(x = TV, y = Sales)) + geom_point() + ggtitle("Scatterplot of TV vs Sales") + xlab("Budgets on TV, in thousands of dollars") + ylab("Sales, in thousands of units")
save_pdf(scatter_tv_sales, "scatterplot-tv-sales.pdf")
save_png(scatter_tv_sales, "scatterplot-tv-sales.png")
data = read.csv("data/Advertising.csv")
lm(Sales ~ TV, data = data)
model.lm = lm(Sales ~ TV, data = data)
summary(model.lm)
